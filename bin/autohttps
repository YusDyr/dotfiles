#!/usr/bin/env python

import argparse
import os
import shutil
import socket
import subprocess
import tempfile

arg_parser = argparse.ArgumentParser('Automatically map an HTTP port to HTTPS with a self signed certificate')
arg_parser.add_argument('--http-port', type = int, default = 80, help = 'The port your HTTP server is listening on')
arg_parser.add_argument('--https-port', type = int, default = 443, help = 'The port your HTTPS server should listen on')
arg_parser.add_argument('--rebuild', action = 'store_true', help = 'Force the container to rebuild')
args = arg_parser.parse_args()

local_ip = socket.gethostbyname(socket.gethostname())

def write_dockerfile(fout):
    fout.write('''\
FROM ubuntu:16.04

RUN apt-get update \
    && apt-get install -y nginx openssl

RUN mkdir -p /etc/nginx/ssl/ \
    && openssl req \
            -x509 \
            -subj "/C=US/ST=Denial/L=Nowhere/O=Dis" \
            -nodes \
            -days 365 \
            -newkey rsa:2048 \
            -keyout /etc/nginx/ssl/nginx.key \
            -out /etc/nginx/ssl/nginx.cert

ADD nginx.conf /etc/nginx/sites-enabled/default

ENV HTTP_PORT 80
ENV HTTPS_PORT 443

CMD sed -i -e "s/HTTP_PORT/$HTTP_PORT/; s/HTTPS_PORT/$HTTPS_PORT/" /etc/nginx/sites-enabled/default \
    && nginx \
    && tail -f /var/log/nginx/*
''')

def write_nginx_config(fout):
    fout.write('''\
server {
    listen HTTPS_PORT ssl;

    ssl on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_certificate /etc/nginx/ssl/nginx.cert;
    ssl_certificate_key /etc/nginx/ssl/nginx.key;

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://dockerhost:HTTP_PORT;
        proxy_read_timeout 90;
    }
}
''')

def build():
    temp_directory = tempfile.mkdtemp()

    with open(os.path.join(temp_directory, 'Dockerfile'), 'w') as fout:
        write_dockerfile(fout)

    with open(os.path.join(temp_directory, 'nginx.conf'), 'w') as fout:
        write_nginx_config(fout)

    subprocess.check_call('docker build -t autohttps .', shell = True, cwd = temp_directory)

    shutil.rmtree(temp_directory)

def run():
    subprocess.check_call('docker run --rm -it -e HTTP_PORT={http} -e HTTPS_PORT={https} --add-host=dockerhost:{ip} -p {https}:{https} autohttps'.format(
        http = args.http_port,
        https = args.https_port,
        ip = local_ip,
    ), shell = True)

if args.rebuild:
    build()

run()

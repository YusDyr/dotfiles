#!/usr/bin/env python

import datetime
import email.utils
import pprint
import sys
import time

from collections import defaultdict as ddict

MODES = {
    'year': '%Y',
    'month': '%Y-%m',
    'week': '%Y-%m-%d',
    'day': '%Y-%m-%d',
    'hour': '%Y-%m-%d %H',
    'minute': '%Y-%m-%d %H-%M',
    'second': '%Y-%m-%d %H-%M-%S'
}

if len(sys.argv) == 1:
    mode = 'day'
elif len(sys.argv) == 2:
    mode = sys.argv[1]
    if not mode in MODES:
        print('Invalid mode "%s", valid options are %s' % (mode, ', '.join(MODES)))
        sys.exit(0)
else:
    print('Too many arguments, expected none or a mode from %s' % (', '.join(modes)))
    sys.exit(0)

chunks = ddict(lambda : 0)

for line in sys.stdin:
    if ',' in line:
        when, count = line.split(',')
        count = int(count)
    else:
        when, count = line, 1

    if when.startswith('"'):
        when = when.strip().strip('"')

    when = datetime.datetime.fromtimestamp(time.mktime(email.utils.parsedate(when)))
    
    if mode == 'year':
        chunks[when.year] += 1
    elif mode == 'month':
        chunks[when.month] += 1
    elif mode == 'week':
        chunks[when.isoweekday() % 7] += 1
    elif mode == 'day':
        chunks[when.day] += 1
    elif mode == 'hour':
        chunks[when.hour] += 1
    elif mode == 'minute':
        chunks[when.minute] += 1
    elif mode == 'second':
        chunks[when.second] += 1
        
when_from = min(chunks)
when_to = max(chunks)

for key, val in sorted(chunks.items()):
    print('%s,%s' % (key, val))
